/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

ext {
    micronautVersion = '2.3.0'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    // Add MavenCentral for Micronaut dependencies
    mavenCentral();
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Micronaut Dependencies
    annotationProcessor(platform("io.micronaut:micronaut-bom:${micronautVersion}"))
    annotationProcessor("io.micronaut:micronaut-inject-java")
    implementation(platform("io.micronaut:micronaut-bom:${micronautVersion}"))
    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-aop")
    testAnnotationProcessor(platform("io.micronaut:micronaut-bom:${micronautVersion}"))
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")

    // To remove SLF4J warnings
    runtimeOnly "org.slf4j:slf4j-simple"
}

application {
    // Define the main class for the application.
    mainClass = 'com.awesome.micronaut.App'
}

java {
    sourceCompatibility = JavaVersion.VERSION_15
    targetCompatibility = JavaVersion.VERSION_15
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
